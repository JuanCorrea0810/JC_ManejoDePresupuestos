// <auto-generated />
using System;
using ManejoDePresupuestos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManejoDePresupuestos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230114000816_Tablas")]
    partial class Tablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManejoDePresupuestos.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoOperacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoOperacionId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCuentasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCuentasId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.TipoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoCuentas");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.TipoOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposOperaciones");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoOperacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CuentaId");

                    b.HasIndex("TipoOperacionId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Categoria", b =>
                {
                    b.HasOne("ManejoDePresupuestos.Models.TipoOperacion", "TipoOperacion")
                        .WithMany("Categoria")
                        .HasForeignKey("TipoOperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOperacion");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Cuenta", b =>
                {
                    b.HasOne("ManejoDePresupuestos.Models.TipoCuenta", "TipoCuentas")
                        .WithMany("Cuenta")
                        .HasForeignKey("TipoCuentasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCuentas");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Transaccion", b =>
                {
                    b.HasOne("ManejoDePresupuestos.Models.Categoria", "Categoria")
                        .WithMany("Transacciones")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoDePresupuestos.Models.Cuenta", "Cuenta")
                        .WithMany("Transacciones")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoDePresupuestos.Models.TipoOperacion", "TipoOperacion")
                        .WithMany("Transacciones")
                        .HasForeignKey("TipoOperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Cuenta");

                    b.Navigation("TipoOperacion");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Categoria", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.Cuenta", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.TipoCuenta", b =>
                {
                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("ManejoDePresupuestos.Models.TipoOperacion", b =>
                {
                    b.Navigation("Categoria");

                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
